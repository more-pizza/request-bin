#!/usr/bin/env node

// not sure why I have the self signed cert issue
process.env.NODE_TLS_REJECT_UNAUTHORIZED = '0';

require('dotenv').config();
const pino = require('pino');

const logger = pino({ transport: { target: 'pino-pretty', options: { colorize: true } } });

const REMOTE_REQUEST_BIN_URL = process.env.REMOTE_REQUEST_BIN_URL;
if (!REMOTE_REQUEST_BIN_URL) {
  throw new Error('REMOTE_REQUEST_BIN_URL is required');
}

const io = require('socket.io-client');
const socket = io(REMOTE_REQUEST_BIN_URL);
const request = require('request');

const bucketName = process.argv[2];
const forwardingUrl = process.argv[3];

if (!bucketName || !forwardingUrl) {
  console.log();
  console.log('incorrect usage, params are: <bucketName> <forwardingUrl>');
  console.log();
  process.exit(1);
}

function logStartingInfo() {
  console.log();
  console.log('Starting Webhook Forwarder');
  console.log('--------------------------');
  console.log(`  Source Url: ${REMOTE_REQUEST_BIN_URL}`);
  console.log(`  Source Bucket: ${bucketName}`);
  console.log(`  Forwarding to: ${forwardingUrl}`);
  console.log('--------------------------');
  console.log();
}

logStartingInfo();

socket.on('webhook', (webhook) => {
  if (bucketName === webhook.bucket) {
    logger.info({ body: webhook.body }, 'received webhook');
    const reqObj = { url: forwardingUrl, body: webhook.body, json: true };

    if (webhook.headers && webhook.headers.authorization) {
      reqObj.headers = { authorization: webhook.headers.authorization };
    }

    request.post(reqObj, function (err, response, body) {
      if (err) {
        console.log(err);
        process.exit(1);
      }
      logger.info({ body: webhook.body }, 'forwarded webhook');
    });
  }
});
